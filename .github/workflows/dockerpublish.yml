name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Log into registry
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.DOCKER_TOKEN }}"

      - name: Build and Push base if necessary
        run: |
          git diff --name-only HEAD^ | grep "backend/poetry.lock\|base/Dockerfile"
          docker-compose --file docker-compose-ci.yml build base
          docker tag apollo-base votifica/apollo-base:latest
          docker push votifica/apollo-base:latest
        continue-on-error: true

      - name: Build images
        run: |
          docker-compose --file docker-compose-ci.yml build app

      - name: Run black on backend
        run: |
          docker-compose --file docker-compose-ci.yml run --rm app black --check .

      - name: MyPy static analysis
        run: |
          docker-compose --file docker-compose-ci.yml run --rm app mypy apollo

      - name: Run backend tests
        run: |
          docker-compose --file docker-compose-ci.yml run --rm app python manage.py test --settings config.settings.test

      - name: Tag & Push images
        if: github.event_name == 'push'
        run: |
          docker tag apollo_app votifica/apollo-app:latest
          docker push votifica/apollo-app:latest

  test-frontend:

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Log into registry
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.DOCKER_TOKEN }}"

      - name: Build images
        run: |
          docker-compose --file docker-compose-ci.yml build web

      - name: Tag & Push images
        if: github.event_name == 'push'
        run: |
          docker build -t votifica/apollo-web:latest -f ./docker/production/frontend/Dockerfile .
          docker push votifica/apollo-web:latest
