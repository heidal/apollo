version: "3.7"

services:
  db:
    image: postgres:12.1
    env_file:
      - .envs/.local/.postgres
    ports:
      - 5432:5432

  app:
    build:
      dockerfile: docker/local/backend/Dockerfile
      context: .
    env_file:
      - .envs/.local/.django
      - .envs/.local/.postgres
      - .envs/.local/.secret
    # ports:
    #   - 8000:8000
    depends_on:
      - db
    volumes:
      - ./backend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`apollo.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.app.entrypoints=app"
      # - "traefik.http.routers.app.priority=42"

  web:
    build:
      dockerfile: docker/local/frontend/Dockerfile
      context: .
    depends_on: 
      - app 
    volumes:
      - ./frontend:/app
    ports: 
      - 19000:19000
      - 19001:19001
      - 19002:19002
      - 19006:19006
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`apollo.localhost`)"
      - "traefik.http.services.web.loadbalancer.server.port=19006"
      - "traefik.http.routers.web.entrypoints=app"

  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.app.address=:80"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
